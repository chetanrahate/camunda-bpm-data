{
  "ownKey": "wiki",
  "childrenPages": {"wiki": {
    "ownKey": "wiki",
    "childrenPages": {
      "developer-guide": {
        "ownKey": "developer-guide",
        "childrenPages": {
          "contribution": {
            "ownKey": "contribution",
            "ownPages": [{
              "reference": {
                "path": "wiki/developer-guide",
                "baseUrl": "https://www.holunda.io/camunda-bpm-data",
                "fileName": "contribution",
                "extension": "html",
                "usePrettyUrl": true,
                "link": "https://www.holunda.io/camunda-bpm-data/wiki/developer-guide/contribution"
              },
              "next": {
                "path": "wiki/developer-guide",
                "baseUrl": "https://www.holunda.io/camunda-bpm-data",
                "fileName": "project-setup",
                "extension": "html",
                "usePrettyUrl": true,
                "link": "https://www.holunda.io/camunda-bpm-data/wiki/developer-guide/project-setup"
              },
              "description": "",
              "title": "Contribution",
              "content": "<div class=\"sect1\">\n<h2 id=\"_contribution\">Contribution<\/h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>There are several ways in which you may contribute to this project.<\/p>\n<\/div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>File new issues if you found a bug or missing feature<\/p>\n<\/li>\n<li>\n<p>Submit a pull request, if you have a solution for on of the issues<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div class=\"sect2\">\n<h3 id=\"_found_a_bug_or_missing_feature\">Found a bug or missing feature?<\/h3>\n<div class=\"paragraph\">\n<p>Please <a href=\"https://github.com/holuda-io/camunda-bpm-data/issues\">file an issue<\/a> in our\nissue tracking system.<\/p>\n<\/div>\n<\/div>\n<div class=\"sect2\">\n<h3 id=\"_submit_a_pull_request\">Submit a Pull Request<\/h3>\n<div class=\"paragraph\">\n<p>If you found a solution to an <a href=\"https://github.com/holuda-io/camunda-bpm-data/issues\">open issue<\/a>\nand implemented it, we would be happy to add your contribution in the code base. For doing so,\nplease create a pull request. Prior to that, please make sure you<\/p>\n<\/div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>rebased against the <code>develop<\/code> branch<\/p>\n<\/li>\n<li>\n<p>sticked to project coding conventions<\/p>\n<\/li>\n<li>\n<p>added test cases for the problem you are solving<\/p>\n<\/li>\n<li>\n<p>added docs, describing the change<\/p>\n<\/li>\n<li>\n<p>generally complied with codeacy report<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<\/div>\n<\/div>\n<\/div>"
            }]
          },
          "project-setup": {
            "ownKey": "project-setup",
            "ownPages": [{
              "reference": {
                "path": "wiki/developer-guide",
                "baseUrl": "https://www.holunda.io/camunda-bpm-data",
                "fileName": "project-setup",
                "extension": "html",
                "usePrettyUrl": true,
                "link": "https://www.holunda.io/camunda-bpm-data/wiki/developer-guide/project-setup"
              },
              "previous": {
                "path": "wiki/developer-guide",
                "baseUrl": "https://www.holunda.io/camunda-bpm-data",
                "fileName": "contribution",
                "extension": "html",
                "usePrettyUrl": true,
                "link": "https://www.holunda.io/camunda-bpm-data/wiki/developer-guide/contribution"
              },
              "description": "",
              "title": "Project Setup",
              "content": "<div class=\"sect1\">\n<h2 id=\"_project_setup\">Project Setup<\/h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>If you are interested in developing and building the project please follow the following instruction.<\/p>\n<\/div>\n<div class=\"sect2\">\n<h3 id=\"_version_control\">Version control<\/h3>\n<div class=\"paragraph\">\n<p>To checkout sources of the project, please execute from your command line:<\/p>\n<\/div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">git clone https://github.com/holunda-io/camunda-bpm-data.git\ncd camunda-bpm-data<\/code><\/pre>\n<\/div>\n<\/div>\n<div class=\"paragraph\">\n<p>We are using gitflow in our git SCM. That means that you should start from <code>develop<\/code> branch,\ncreate a <code>feature/&lt;name&gt;<\/code> out of it and once it is completed create a pull request containing\nit. Please squash your commits before submitting and use semantic commit messages, if possible.<\/p>\n<\/div>\n<\/div>\n<div class=\"sect2\">\n<h3 id=\"_project_build\">Project Build<\/h3>\n<div class=\"paragraph\">\n<p>Perform the following steps to get a development setup up and running.<\/p>\n<\/div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">./mvnw clean install<\/code><\/pre>\n<\/div>\n<\/div>\n<\/div>\n<div class=\"sect2\">\n<h3 id=\"_integration_tests\">Integration Tests<\/h3>\n<div class=\"paragraph\">\n<p>The default build command above will NOT run <code>failsafe<\/code> Maven plugin executing the integration tests\n(These are JUnit tests with class names ending with ITest). In order to run integration tests, please\ncall from your command line:<\/p>\n<\/div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">./mvnw -Pitest<\/code><\/pre>\n<\/div>\n<\/div>\n<\/div>\n<div class=\"sect2\">\n<h3 id=\"_project_build_modes_and_profiles\">Project build modes and profiles<\/h3>\n<div class=\"sect3\">\n<h4 id=\"_camunda_version\">Camunda Version<\/h4>\n<div class=\"paragraph\">\n<p>You can choose the used Camunda version by specifying the profile <code>camunda-ee<\/code> or <code>camunda-ce<\/code>. The default\nversion is a Community Edition. Specify <code>-Pcamunda-ee<\/code> to switch to Camunda Enterprise edition. This will\nrequire a valid Camunda license. You can put it into a file <code>~/.camunda/license.txt<\/code> and it will be detected\nautomatically.<\/p>\n<\/div>\n<\/div>\n<div class=\"sect3\">\n<h4 id=\"_examples\">Examples<\/h4>\n<div class=\"paragraph\">\n<p>If you want to skip the build of examples, please specify the <code>-DskipExamples<\/code> switch in your command line.<\/p>\n<\/div>\n<\/div>\n<div class=\"sect3\">\n<h4 id=\"_documentation\">Documentation<\/h4>\n<div class=\"paragraph\">\n<p>We are using <a href=\"https://github.com/orchidhq/Orchid\">JavaEden Orchid<\/a> for generation of a static site documentation and rely on AsciiDoc as much as possible.<\/p>\n<\/div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip<\/div>\n<\/td>\n<td class=\"content\">\nIf you want to develop your docs in 'live' mode, run <code>./mvnw -f docs -Pdocs-serve<\/code> and access\nthe <a href=\"http://localhost:8080/\" class=\"bare\">http://localhost:8080/<\/a> from your browser.\n<\/td>\n<\/tr>\n<\/table>\n<\/div>\n<div class=\"paragraph\">\n<p>For creation of documentation, please run:<\/p>\n<\/div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">./mvnw -f docs<\/code><\/pre>\n<\/div>\n<\/div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning<\/div>\n<\/td>\n<td class=\"content\">\nThis operation requires special permissions. You need to replace <code>GITHUB_TOKEN<\/code> by the token of\nthe github pages repository, allowing to publish the pages.\n<\/td>\n<\/tr>\n<\/table>\n<\/div>\n<div class=\"paragraph\">\n<p>In order to publish documentation to github pages, please run from command line<\/p>\n<\/div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">./mvnw -f docs -Pdeploy-docs -DgithubToken=GITHUB_TOKEN<\/code><\/pre>\n<\/div>\n<\/div>\n<\/div>\n<div class=\"sect3\">\n<h4 id=\"_starting_example_application\">Starting example application<\/h4>\n<div class=\"paragraph\">\n<p>To start applications, either use your IDE and create run configuration for the classes:<\/p>\n<\/div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>io.holunda.camunda.bpm.data.example.CamundaBpmDataProcessApplication<\/code><\/p>\n<\/li>\n<li>\n<p><code>io.holunda.camunda.bpm.data.example.kotlin.CamundaBpmDataKotlinExampleApplication<\/code><\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div class=\"paragraph\">\n<p>Alternatively, you can run them from the command line:<\/p>\n<\/div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">./mvn spring-boot:run -f example/example-java\n./mvn spring-boot:run -f example/example-kotlin<\/code><\/pre>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div class=\"sect2\">\n<h3 id=\"_continuous_integration\">Continuous Integration<\/h3>\n<div class=\"paragraph\">\n<p>Github Actions is building all branches on commit hook. In addition, a special action\nis building releases from master branch.<\/p>\n<\/div>\n<\/div>\n<div class=\"sect2\">\n<h3 id=\"_release_management\">Release Management<\/h3>\n<div class=\"paragraph\">\n<p>Release management has been set-up for use of Sonatype Nexus (= Maven Central).<\/p>\n<\/div>\n<div class=\"sect3\">\n<h4 id=\"_what_modules_get_deployed_to_repository\">What modules get deployed to repository<\/h4>\n<div class=\"paragraph\">\n<p>Currently, the following modules are released to OSS Maven Central:<\/p>\n<\/div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>camunda-bpm-data-parent<\/p>\n<\/li>\n<li>\n<p>camunda-bpm-data<\/p>\n<\/li>\n<li>\n<p>camunda-bpm-data-kotlin<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<\/div>\n<div class=\"sect3\">\n<h4 id=\"_trigger_new_release\">Trigger new release<\/h4>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning<\/div>\n<\/td>\n<td class=\"content\">\nThis operation requires special permissions.\n<\/td>\n<\/tr>\n<\/table>\n<\/div>\n<div class=\"paragraph\">\n<p>We use gitflow for development (see <a href=\"http://nvie.com/posts/a-successful-git-branching-model/\">A successful git branching model<\/a>\nfor more details). You could use gitflow with native git commands, but then you would have\nto change the versions in the poms manually. Therefore we use the\n<a href=\"https://github.com/aleksandr-m/gitflow-maven-plugin/\">mvn gitflow plugin<\/a>, which handles this and other\nthings nicely.<\/p>\n<\/div>\n<div class=\"paragraph\">\n<p>You can build a release with:<\/p>\n<\/div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-sh\" data-lang=\"sh\">./mvnw gitflow:release-start\n./mvnw gitflow:release-finish<\/code><\/pre>\n<\/div>\n<\/div>\n<div class=\"paragraph\">\n<p>This will update the versions in the <code>pom.xml<\/code> s accordingly and push the release tag to the <code>master<\/code> branch\nand update the <code>develop<\/code> branch for the new development version.<\/p>\n<\/div>\n<\/div>\n<div class=\"sect3\">\n<h4 id=\"_trigger_a_deploy\">Trigger a deploy<\/h4>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning<\/div>\n<\/td>\n<td class=\"content\">\nThis operation requires special permissions.\n<\/td>\n<\/tr>\n<\/table>\n<\/div>\n<div class=\"paragraph\">\n<p>Currently, CI allows for deployment of artifacts to Maven Central and is executed via Github Actions.\nThis means, that a push to <code>master<\/code> branch will start the corresponding build job, and if successful the\nartifacts will get into <code>Staging Repositories<\/code> of OSS Sonatype without manual intervention. The repository\ngets automatically closed and released on successful upload.<\/p>\n<\/div>\n<div class=\"paragraph\">\n<p>If you still want to execute the the deployment from your local machine, you need to execute the\nfollowing command on the <code>master<\/code> branch:<\/p>\n<\/div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-sh\" data-lang=\"sh\">./mvnw clean deploy -B -DskipTests -DskipExamples -Prelease<\/code><\/pre>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<\/div>"
            }]
          }
        },
        "ownPages": [
          {
            "reference": {
              "path": "wiki",
              "baseUrl": "https://www.holunda.io/camunda-bpm-data",
              "fileName": "developer-guide",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://www.holunda.io/camunda-bpm-data/wiki/developer-guide"
            },
            "description": "",
            "title": "Developer Guide",
            "content": "<html>\n <head><\/head>\n <body>\n  <h2><a href=\"#\" class=\"anchor\"><\/a><\/h2> \n  <p><a href=\"https://www.holunda.io/camunda-bpm-data/wiki/developer-guide/contribution\">Contribution<\/a><\/p> \n  <p><a href=\"https://www.holunda.io/camunda-bpm-data/wiki/developer-guide/project-setup\">Project Setup<\/a><\/p> \n <\/body>\n<\/html>\n"
          },
          {
            "reference": {
              "path": "wiki/developer-guide",
              "baseUrl": "https://www.holunda.io/camunda-bpm-data",
              "fileName": "book",
              "extension": "pdf",
              "usePrettyUrl": false,
              "link": "https://www.holunda.io/camunda-bpm-data/wiki/developer-guide/book.pdf"
            },
            "description": "",
            "title": "Developer Guide Book",
            "content": ""
          }
        ]
      },
      "user-guide": {
        "ownKey": "user-guide",
        "childrenPages": {
          "features": {
            "ownKey": "features",
            "ownPages": [{
              "reference": {
                "path": "wiki/user-guide",
                "baseUrl": "https://www.holunda.io/camunda-bpm-data",
                "fileName": "features",
                "extension": "html",
                "usePrettyUrl": true,
                "link": "https://www.holunda.io/camunda-bpm-data/wiki/user-guide/features"
              },
              "next": {
                "path": "wiki/user-guide",
                "baseUrl": "https://www.holunda.io/camunda-bpm-data",
                "fileName": "examples",
                "extension": "html",
                "usePrettyUrl": true,
                "link": "https://www.holunda.io/camunda-bpm-data/wiki/user-guide/examples"
              },
              "previous": {
                "path": "wiki/user-guide",
                "baseUrl": "https://www.holunda.io/camunda-bpm-data",
                "fileName": "motivation",
                "extension": "html",
                "usePrettyUrl": true,
                "link": "https://www.holunda.io/camunda-bpm-data/wiki/user-guide/motivation"
              },
              "description": "",
              "title": "Features",
              "content": "<div class=\"sect1\">\n<h2 id=\"_features\">Features<\/h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The library Camunda BPM Data provides the following functionality:<\/p>\n<\/div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>The library provides a way to construct generic adapter for every process variable.<\/p>\n<\/li>\n<li>\n<p>The adapter contains variable name.<\/p>\n<\/li>\n<li>\n<p>The adapter contains variable type.<\/p>\n<\/li>\n<li>\n<p>The adapter can be applied in any context (<code>RuntimeService<\/code>, <code>TaskService<\/code>, <code>DelegateExecution<\/code>, <code>DelegateTask<\/code>, <code>VariableMap<\/code>).<\/p>\n<\/li>\n<li>\n<p>The adapter offers methods to read, write, update and remove variable values.<\/p>\n<\/li>\n<li>\n<p>The adapter works for all types supported by Camunda BPM. This includes primitive types, object and container types ( <code>List&lt;T&gt;<\/code>, <code>Set&lt;T&gt;<\/code>, <code>Map&lt;K , V&gt;<\/code> ).<\/p>\n<\/li>\n<li>\n<p>The adapter supports global / local variables.<\/p>\n<\/li>\n<li>\n<p>The adapter support transient variables.<\/p>\n<\/li>\n<li>\n<p>Fluent builders are available in order to set, remove or update multiple variables in the same context.<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<\/div>\n<\/div>"
            }]
          },
          "examples": {
            "ownKey": "examples",
            "ownPages": [{
              "reference": {
                "path": "wiki/user-guide",
                "baseUrl": "https://www.holunda.io/camunda-bpm-data",
                "fileName": "examples",
                "extension": "html",
                "usePrettyUrl": true,
                "link": "https://www.holunda.io/camunda-bpm-data/wiki/user-guide/examples"
              },
              "next": {
                "path": "wiki/user-guide",
                "baseUrl": "https://www.holunda.io/camunda-bpm-data",
                "fileName": "further-outlook",
                "extension": "html",
                "usePrettyUrl": true,
                "link": "https://www.holunda.io/camunda-bpm-data/wiki/user-guide/further-outlook"
              },
              "previous": {
                "path": "wiki/user-guide",
                "baseUrl": "https://www.holunda.io/camunda-bpm-data",
                "fileName": "features",
                "extension": "html",
                "usePrettyUrl": true,
                "link": "https://www.holunda.io/camunda-bpm-data/wiki/user-guide/features"
              },
              "description": "",
              "title": "Examples",
              "content": "<div class=\"sect1\">\n<h2 id=\"_examples\">Examples<\/h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_define_variable\">Define variable<\/h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">public class OrderApproval {\n  public static final VariableFactory&lt;String&gt; ORDER_ID = stringVariable(\"orderId\");\n  public static final VariableFactory&lt;Order&gt; ORDER = customVariable(\"order\", Order.class);\n  public static final VariableFactory&lt;Boolean&gt; ORDER_APPROVED = booleanVariable(\"orderApproved\");\n  public static final VariableFactory&lt;OrderPosition&gt; ORDER_POSITION = customVariable(\"orderPosition\", OrderPosition.class);\n  public static final VariableFactory&lt;BigDecimal&gt; ORDER_TOTAL = customVariable(\"orderTotal\", BigDecimal.class);\n}<\/code><\/pre>\n<\/div>\n<\/div>\n<\/div>\n<div class=\"sect2\">\n<h3 id=\"_read_variable_from_java_delegate\">Read variable from Java delegate<\/h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">@Configuration\nclass JavaDelegates {\n\n  @Bean\n  public JavaDelegate calculateOrderPositions() {\n    return execution -&gt; {\n      OrderPosition orderPosition = ORDER_POSITION.from(execution).get();\n      Boolean orderApproved = ORDER_APPROVED.from(execution).getLocal();\n      Optional&lt;BigDecimal&gt; orderTotal = ORDER_TOTAL.from(execution).getOptional();\n    };\n  }\n}<\/code><\/pre>\n<\/div>\n<\/div>\n<\/div>\n<div class=\"sect2\">\n<h3 id=\"_write_variable_from_java_delegate\">Write variable from Java delegate<\/h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">import java.math.BigDecimal\n;@Configuration\nclass JavaDelegates {\n\n  @Bean\n  public JavaDelegate calculateOrderPositions() {\n    return execution -&gt; {\n      OrderPosition orderPosition = new OrderPosition(\"Pencil\", BigDecimal.valueOf(1.5), 1);\n      ORDER_POSITION.on(execution).set(orderPosition);\n    };\n  }\n}<\/code><\/pre>\n<\/div>\n<\/div>\n<\/div>\n<div class=\"sect2\">\n<h3 id=\"_remove_variable_from_java_delegate\">Remove variable from Java delegate<\/h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">import java.math.BigDecimal\n;@Configuration\nclass JavaDelegates {\n\n  @Bean\n  public JavaDelegate calculateOrderPositions() {\n    return execution -&gt; {\n      ORDER_APPROVED.on(execution).removeLocal();\n    };\n  }\n}<\/code><\/pre>\n<\/div>\n<\/div>\n<\/div>\n<div class=\"sect2\">\n<h3 id=\"_update_variable_from_java_delegate\">Update variable from Java delegate<\/h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">import java.math.BigDecimal;\n@Configuration\nclass JavaDelegates {\n\n  @Bean\n  public JavaDelegate calculateOrderPositions() {\n    return execution -&gt; {\n      OrderPosition orderPosition = ORDER_POSITION.from(execution).get();\n      ORDER_TOTAL.on(execution).updateLocal(amount -&gt; amount.add(orderPosition.getNetCost().multiply(BigDecimal.valueOf(orderPosition.getAmount()))));\n    };\n  }\n}<\/code><\/pre>\n<\/div>\n<\/div>\n<\/div>\n<div class=\"sect2\">\n<h3 id=\"_fluent_api_to_remove_several_variables\">Fluent API to remove several variables<\/h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">@Configuration\nclass JavaDelegates {\n\n  @Bean\n  public ExecutionListener removeProcessVariables() {\n    return execution -&gt;\n    {\n      CamundaBpmData.builder(execution)\n          .remove(ORDER_ID)\n          .remove(ORDER)\n          .remove(ORDER_APPROVED)\n          .remove(ORDER_TOTAL)\n          .removeLocal(ORDER_POSITIONS);\n    };\n  }\n}<\/code><\/pre>\n<\/div>\n<\/div>\n<\/div>\n<div class=\"sect2\">\n<h3 id=\"_fluent_api_to_set_several_variables\">Fluent API to set several variables<\/h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">@Component\nclass SomeService {\n\n  @Autowired\n  private RuntimeService runtimeService;\n  @Autowired\n  private TaskService taskService;\n\n  public void setNewValuesForExecution(String executionId, String orderId, Boolean orderApproved) {\n      CamundaBpmData.builder(runtimeService, executionId)\n          .set(ORDER_ID, orderId)\n          .set(ORDER_APPROVED, orderApproved)\n          .update(ORDER_TOTAL, amount -&gt; amount.add(10));\n  }\n\n  public void setNewValuesForTask(String taskId, String orderId, Boolean orderApproved) {\n      CamundaBpmData.builder(taskService, taskId)\n          .set(ORDER_ID, orderId)\n          .set(ORDER_APPROVED, orderApproved);\n  }\n\n  public void start() {\n      VariableMap variables = CamundaBpmData.builder()\n          .set(ORDER_ID, \"4711\")\n          .set(ORDER_APPROVED, false)\n          .build();\n      runtimeService.startProcessInstanceById(\"myId\", \"businessKey\", variables);\n  }\n}<\/code><\/pre>\n<\/div>\n<\/div>\n<\/div>\n<div class=\"sect2\">\n<h3 id=\"_example_projects\">Example projects<\/h3>\n<div class=\"paragraph\">\n<p>We provide two examples:<\/p>\n<\/div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Java Example, see <a href=\"https://github.com/holunda-io/camunda-bpm-data/tree/develop/example/example-java\">Github<\/a><\/p>\n<\/li>\n<li>\n<p>Kotlin Example, see <a href=\"https://github.com/holunda-io/camunda-bpm-data/tree/develop/example/kotlin-java\">Github<\/a><\/p>\n<\/li>\n<\/ul>\n<\/div>\n<\/div>\n<\/div>\n<\/div>"
            }]
          },
          "further-outlook": {
            "ownKey": "further-outlook",
            "ownPages": [{
              "reference": {
                "path": "wiki/user-guide",
                "baseUrl": "https://www.holunda.io/camunda-bpm-data",
                "fileName": "further-outlook",
                "extension": "html",
                "usePrettyUrl": true,
                "link": "https://www.holunda.io/camunda-bpm-data/wiki/user-guide/further-outlook"
              },
              "previous": {
                "path": "wiki/user-guide",
                "baseUrl": "https://www.holunda.io/camunda-bpm-data",
                "fileName": "examples",
                "extension": "html",
                "usePrettyUrl": true,
                "link": "https://www.holunda.io/camunda-bpm-data/wiki/user-guide/examples"
              },
              "description": "",
              "title": "Further outlook",
              "content": "<div class=\"sect1\">\n<h2 id=\"_further_outlook\">Further outlook<\/h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Planned or featured features:<\/p>\n<\/div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Native Kotlin support including extension functions<\/p>\n<\/li>\n<li>\n<p>Process variable guards for better testing<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<\/div>\n<\/div>"
            }]
          },
          "motivation": {
            "ownKey": "motivation",
            "ownPages": [{
              "reference": {
                "path": "wiki/user-guide",
                "baseUrl": "https://www.holunda.io/camunda-bpm-data",
                "fileName": "motivation",
                "extension": "html",
                "usePrettyUrl": true,
                "link": "https://www.holunda.io/camunda-bpm-data/wiki/user-guide/motivation"
              },
              "next": {
                "path": "wiki/user-guide",
                "baseUrl": "https://www.holunda.io/camunda-bpm-data",
                "fileName": "features",
                "extension": "html",
                "usePrettyUrl": true,
                "link": "https://www.holunda.io/camunda-bpm-data/wiki/user-guide/features"
              },
              "description": "",
              "title": "Motivation",
              "content": "<div class=\"sect1\">\n<h2 id=\"_motivation\">Motivation<\/h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_typed_access_to_process_variables\">Typed access to process variables<\/h3>\n<div class=\"paragraph\">\n<p>Camunda BPM engine provide Java API to access the process variables.\nThis consists of:<\/p>\n<\/div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>RuntimeService<\/code> methods<\/p>\n<\/li>\n<li>\n<p><code>TaskService<\/code> methods<\/p>\n<\/li>\n<li>\n<p>Methods on <code>DelegateExecution<\/code><\/p>\n<\/li>\n<li>\n<p>Methods on <code>DelegateTask<\/code><\/p>\n<\/li>\n<li>\n<p><code>VariableMap<\/code><\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div class=\"paragraph\">\n<p>All those methods requires the user of the API to know the variable type.\nHere is a usage example:<\/p>\n<\/div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">List&lt;OrderPosition&gt; orderPositions = (List&lt;OrderPosition&gt;) runtimeService\n  .getVariable(\"myExecutionIn\", \"orderPositions\");<\/code><\/pre>\n<\/div>\n<\/div>\n<div class=\"paragraph\">\n<p>This leads to problems during refactoring and makes variable access more complicated than it is.\nMore details can be found in:<\/p>\n<\/div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://medium.com/holisticon-consultants/data-in-process-part-1-2620bf9abd76\">Data in Process (Part 1)<\/a><\/p>\n<\/li>\n<li>\n<p><a href=\"https://medium.com/holisticon-consultants/data-in-process-part-2-7c6a109e6ee2\">Data in Process (Part 2)<\/a><\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div class=\"paragraph\">\n<p>This library addresses this issue and allows for more convenient type-safe process variable access.<\/p>\n<\/div>\n<\/div>\n<\/div>\n<\/div>"
            }]
          }
        },
        "ownPages": [
          {
            "reference": {
              "path": "wiki",
              "baseUrl": "https://www.holunda.io/camunda-bpm-data",
              "fileName": "user-guide",
              "extension": "html",
              "usePrettyUrl": true,
              "link": "https://www.holunda.io/camunda-bpm-data/wiki/user-guide"
            },
            "description": "",
            "title": "User Guide",
            "content": "<html>\n <head><\/head>\n <body>\n  <h2><a href=\"#\" class=\"anchor\"><\/a><\/h2> \n  <ul> \n   <li><a href=\"https://www.holunda.io/camunda-bpm-data/wiki/user-guide/motivation\">Motivation<\/a><\/li> \n   <li><a href=\"https://www.holunda.io/camunda-bpm-data/wiki/user-guide/features\">Features<\/a><\/li> \n   <li><a href=\"https://www.holunda.io/camunda-bpm-data/wiki/user-guide/examples\">Examples<\/a><\/li> \n   <li><a href=\"https://www.holunda.io/camunda-bpm-data/wiki/user-guide/further-outlook\">Further Outlook<\/a><\/li> \n  <\/ul> \n <\/body>\n<\/html>\n"
          },
          {
            "reference": {
              "path": "wiki/user-guide",
              "baseUrl": "https://www.holunda.io/camunda-bpm-data",
              "fileName": "book",
              "extension": "pdf",
              "usePrettyUrl": false,
              "link": "https://www.holunda.io/camunda-bpm-data/wiki/user-guide/book.pdf"
            },
            "description": "",
            "title": "User Guide Book",
            "content": ""
          }
        ]
      }
    },
    "ownPages": [{
      "reference": {
        "path": "",
        "baseUrl": "https://www.holunda.io/camunda-bpm-data",
        "fileName": "wiki",
        "extension": "html",
        "usePrettyUrl": true,
        "link": "https://www.holunda.io/camunda-bpm-data/wiki"
      },
      "description": "",
      "title": "Wiki",
      "content": ""
    }]
  }}
}